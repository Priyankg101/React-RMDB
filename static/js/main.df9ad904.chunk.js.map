{"version":3,"sources":["images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/Header.styles.js","components/Header/index.js","config.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/Thumb/Thumb.styles.js","components/Thumb/index.js","components/Spinner/index.js","components/Spinner/Spinner.styles.js","images/search-icon.svg","components/SearchBar/SearchBar.styles.js","components/SearchBar/index.js","components/Button/Button.styles.js","components/Button/index.js","API.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Home.js","components/Movie.js","hooks/useMovieFetch.js","components/NotFound.js","GlobalStyle.js","App.js","index.js"],"names":["Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Header","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","process","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","props","image","Text","HeroImage","title","text","Grid","header","children","Image","Thumb","movieId","clickable","Spinner","SearchBar","setSearchTerm","useState","state","setState","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","type","placeholder","onChange","event","currentTarget","value","button","Button","callback","onClick","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","rating","initialState","results","total_pages","total_results","Home","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","console","log","API","movies","prev","useHomeFetch","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","id","Movie","credits","directors","crew","filter","member","job","actors","cast","useMovieFetch","useParams","NotFound","GlobalStyle","createGlobalStyle","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df9ad904.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  max-width: var(--maxWidth);\n  padding: 20px 0;\n  margin: 0 auto;\n`;\n\nexport const LogoImg = styled.img`\n  width: 200px;\n  @media screen and (max-width: 500px) {\n    width: 150px;\n  }\n`;\n\nexport const TMDBLogoImg = styled.img`\n  width: 100px;\n  @media screen and (max-width: 500px) {\n    width: 80px;\n  }\n`;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport RMDBLogo from '../../images/react-movie-logo.svg';\n\nimport TMDBLogo from '../../images/tmdb_logo.svg';\n\nimport {Wrapper, Content, LogoImg, TMDBLogoImg} from './Header.styles';\n\nconst Header = () => (\n    <Wrapper>\n        <Content>\n            <Link to='/'>\n                <LogoImg src={RMDBLogo} alt='RMDB-Logo'></LogoImg>\n                </Link>\n            <TMDBLogoImg src = {TMDBLogo} alt = 'TMDB-Logo'/>\n        </Content>\n    </Wrapper>\n);\n\nexport default Header;","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w780';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background: ${(props) =>\n    `linear-gradient(\n      to bottom, rgba(0,0,0,0)\n      39%,rgba(0,0,0,0)\n      41%,rgba(0,0,0,0.65)\n      100%\n    ),\n    url('${props.image}'), var(--darkGrey)`};\n  background-size: 100%, cover;\n  background-position: center;\n  height: 600px;\n  position: relative;\n  animation: animateHeroimage 1s;\n  @keyframes animateHeroimage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  padding: 20px;\n  max-width: var(--maxWidth);\n  margin: 0 auto;\n`;\n\nexport const Text = styled.div`\n  z-index: 100;\n  max-width: 700px;\n  position: absolute;\n  bottom: 40px;\n  margin-right: 20px;\n  min-height: 100px;\n  color: var(--white);\n  h1 {\n    font-size: var(--fontSuperBig);\n    @media screen and (max-width: 720px) {\n      font-size: var(--fontBig);\n    }\n  }\n  p {\n    font-size: var(--fontMed);\n  \n    @media screen and (max-width: 720px) {\n      font-size: var(--fontSmall);\n    }\n  }\n  @media screen and (max-width: 720px) {\n    max-width: 100%;\n  }\n`;","import React from 'react';\nimport {Wrapper, Content, Text} from './HeroImage.styles';\n\nconst HeroImage = ({image, title, text}) => (\n    <Wrapper image = {image}>\n        <Content>\n            <Text>\n                <h1>{title}</h1>\n                <p>{text}</p>\n            </Text>\n        </Content>\n    </Wrapper>\n);\n\nexport default HeroImage;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  max-width: var(--maxWidth);\n  margin: 0 auto;\n  padding: 0 20px;\n\n  h1 {\n    color: var(--medGrey);\n  }\n\n  h1 {\n    @media screen and (max-width: 768px) {\n      font-size: var(--fontBig);\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 2rem;\n`;","import React from 'react';\n//styles\nimport {Wrapper, Content} from './Grid.styles';\n\nconst Grid = ({header, children}) => (\n    <Wrapper>\n        <h1>\n            {header}\n        </h1>\n<Content>{children}</Content>\n    </Wrapper>\n);\n\nexport default Grid;","import styled from 'styled-components';\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  max-width: 720px;\n  transition: all 0.3s;\n  object-fit: cover;\n  border-radius: 20px;\n  animation: animateMovieThumb 0.5s;\n\n  :hover {\n    opacity: 0.8;\n  }\n\n  @keyframes animateMovieThumb {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;","import React from 'react';\nimport { Link } from 'react-router-dom';\n//styles\nimport {Image} from './Thumb.styles';\n\nconst Thumb = ({image, movieId, clickable}) => (\n    <div>\n        {clickable ? (<Link to={`/${movieId}`}>\n        <Image src = {image} alt = 'movie-thumb'></Image>\n        </Link>) :\n        (<Image src = {image} alt = 'movie-thumb'></Image>)\n        }\n        \n    </div>\n)\n\nexport default Thumb;","import { Spinner } from './Spinner.styles';\n\nexport default Spinner;","import styled from 'styled-components';\n\nexport const Spinner = styled.div`\n  border: 5px solid var(--lightGrey); \n  border-top: 5px solid var(--medGrey);\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 100px;\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  position: relative;\n  max-width: var(--maxWidth);\n  width: 100%;\n  height: 55px;\n  background: var(--medGrey);\n  margin: 0 auto;\n  border-radius: 40px;\n  color: var(--white);\n\n  img {\n    position: absolute;\n    left: 15px;\n    top: 14px;\n    width: 30px;\n  }\n\n  input {\n    font-size: 28px;\n    position: absolute;\n    left: 0px;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border: 0;\n    width: 95%;\n    background: transparent;\n    height: 40px;\n    color: var(--white);\n\n    :focus {\n      outline: none;\n    }\n\n    @media screen and (max-width: 720px) {\n      font-size: 28px;\n    }\n  }\n`;","import React, { useState, useEffect, useRef } from 'react';\n//image\nimport searchIcon from '../../images/search-icon.svg'\n//Styles\nimport { Wrapper, Content } from './SearchBar.styles'\n\nconst SearchBar = ({ setSearchTerm }) => {\n\n    const [state, setState] = useState('');\n    const initial = useRef(true);\n    useEffect(() => {\n        if (initial.current) {\n            initial.current = false;\n            return;\n        }\n        const timer = setTimeout(() => {\n            setSearchTerm(state);\n        }, 500)\n        return () => clearTimeout(timer)\n    },[setSearchTerm,state])\n    return (\n        <Wrapper>\n            <Content>\n                <img src={searchIcon} alt='search-icon'></img>\n                <input type='text'\n                    placeholder='Search Movie'\n                    onChange={event => setState(event.currentTarget.value)}\n                    value = {state}\n                />\n            </Content>\n        </Wrapper>\n    );\n};\n\nexport default SearchBar;","\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.button`\n  display: block;\n  background: var(--darkGrey);\n  width: 25%;\n  min-width: 200px;\n  height: 60px;\n  border-radius: 30px;\n  color: var(--white);\n  border: 0;\n  font-size: var(--fontBig);\n  margin: 20px auto;\n  transition: all 0.3s;\n  outline: none;\n  cursor: pointer;\n\n  :hover {\n    opacity: 0.8;\n  }\n`;","import React from 'react';\n//Styles\nimport { Wrapper } from './Button.styles'\n\nconst Button = ({ text, callback }) => (\n    <Wrapper type=\"button\" onClick={callback}>\n        {text}\n    </Wrapper>\n);\n\nexport default Button;","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default apiSettings;\n","import {useState, useEffect} from 'react';\n//API\nimport API from '../API'\n\nconst initialState = {\n    page: 0,\n    results: [],\n    total_pages: 0,\n    total_results:0\n}\n\nexport const useHomeFetch = () => {\n    const [state, setState] = useState(initialState);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [isLoadingMore, setIsLoadingMore] = useState(false);\n    console.log(searchTerm);\n    const fetchMovies = async (page, searchTerm = \"\") => {\n        try {\n            setError(false);\n            setLoading(true);\n\n            const movies = await API.fetchMovies(searchTerm, page);\n\n            setState(prev => ({\n                ...movies, \n                results: \n                    page>1 ? [...prev.results, ...movies.results] : [...movies.results]\n            }))\n        }\n        catch (error) {\n            setError(true);\n        }\n        setLoading(false);\n    };\n\n    //inital render\n    useEffect(() => {\n        setState(initialState);\n        fetchMovies(1, searchTerm);\n    }, [searchTerm])\n\n    //Load More\n    useEffect(() => {\n        if (!isLoadingMore) return;\n        fetchMovies(state.page + 1, searchTerm);\n        setIsLoadingMore(false);\n    },[isLoadingMore, searchTerm, state.page])\n    return {state, loading, error, setSearchTerm, searchTerm, setIsLoadingMore};\n};","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import React, {useState, useEffect} from 'react';\n\n//Config\nimport {POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL} from '../config';\n\n//Component\nimport HeroImage from '../components/HeroImage/index'\nimport Grid from '../components/Grid/index'\nimport Thumb from '../components/Thumb/index'\nimport Spinner from './Spinner'\nimport SearchBar from './SearchBar'\nimport Button from './Button'\n//Hook\nimport {useHomeFetch} from '../hooks/useHomeFetch'\n//Image\nimport NoImage from '../images/no_image.jpg';\n\nconst Home = () => {\n    const {state, loading, error, setSearchTerm, searchTerm, setIsLoadingMore} = useHomeFetch();    \n    console.log(state);\n\n    if(error)   return <div>Something Went Wrong ...</div>\n    return (\n    <>\n    {!searchTerm && state.results[0] && \n    <HeroImage \n    image = {`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\n    title = {state.results[0].original_title}\n    text = {state.results[0].overview}\n    />}\n    <SearchBar setSearchTerm = {setSearchTerm}></SearchBar>\n            <Grid header={searchTerm ? 'Search Result':'Popular Movies'}>\n        {state.results.map(movie => (\n            <Thumb key = {movie.id} clickable image={movie.poster_path ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path: NoImage} movieId = {movie.id}></Thumb>\n        ))}\n            </Grid>\n    \n            {\n                loading && \n                <Spinner />}\n            {\n                state.page < state.total_pages && !loading && (<Button text = \"Load More\" callback = {() => setIsLoadingMore(true)}></Button>)\n    }        \n    </>\n    )\n}\n\nexport default Home;","import React from 'react';\nimport { useParams } from 'react-router-dom';\n//config\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config';\n//components\nimport Grid from './Grid';\nimport Spinner from './Spinner';\n//Hook\nimport { useMovieFetch } from '../hooks/useMovieFetch';\n//Image\nimport NoImage from '../images/no_image.jpg';\n\nconst Movie = () => {\n\n    const { movieId } = useParams();\n    const { state: movie, loading, error } = useMovieFetch(movieId);\n\n    return (\n        <>\n           <div>Movie</div> \n        </>\n    )\n}\n\nexport default Movie;","import { useState, useEffect } from 'react';\nimport API from '../API';\n\nexport const useMovieFetch = movieId => {\n    const [state, setState] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        const fetchMovie = async () => {\n            try {\n                setLoading(true);\n                setError(false);\n\n                const movie = await API.fetchMovie(movieId);\n                const credits = await API.fetchCredits(movieId);\n                //Get directors only\n                const directors = credits.crew.filter(\n                    member => member.job === 'Director'\n                );\n\n                setState({\n                    ...movie,\n                    actors: credits.cast,\n                    directors\n                });\n                setLoading(false);\n            }\n            catch (error) {\n                setError(true);\n            }\n        }\n        fetchMovie();\n    }, [movieId])\n    return { state, loading, error };\n};","import React from 'react';\nconst NotFound = () => (<div>Not Found</div>);\n\nexport default NotFound;","import {createGlobalStyle} from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n    :root {\n        --maxWidth: 1280px;\n        --white: #fff;\n        --lightGrey: #eee;\n        --medGrey: #353535;\n        --darkGrey: #1c1c1c;\n        --fontSuperBig: 2.5rem;\n        --fontBig: 1.5rem;\n        --fontMed: 1.2rem;\n        --fontSmall: 1rem;\n    }\n    * {\n        box-sizing: border-box;\n        font-family: 'Abel', sans serif;\n    }\n\n    body {\n        margin: 0;\n        padding: 0;\n\n        h1 {\n            font-size: 2rem;\n            font-weight: 600;\n            color: var(--white);\n        }\n\n        h3 {\n            font-size: 1.1rem;\n            font-weight: 600;\n        }\n\n        p {\n            font-size: 1rem;\n            color: var(--white);\n        }\n    }\n\n`;","import React from 'react';\n//Routing\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n//components\nimport Header from './components/Header/index';\nimport Home from './components/Home';\nimport Movie from './components/Movie'\nimport NotFound from './components/NotFound'\n//Styles\nimport {GlobalStyle} from './GlobalStyle';\n\nconst App = () => (\n    <Router>\n      <Header />\n    <Routes>\n      <Route path = '/' element={<Home />} />\n      <Route path='/:movieId' element={<Movie />} />\n      <Route path='/*' element = {<NotFound/>}/>\n        </Routes>\n      <GlobalStyle/>\n    </Router>\n  );\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}